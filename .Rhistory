library(readxl)
Conf_matrix_random_forest <- read_excel("Final_data/Strumenti/Conf_matrix_random_forest.xlsx")
View(Conf_matrix_random_forest)
save(Conf_matrix_random_forest, file="Conf_matrix_random_forest.rda")
save(table(Conf_matrix_random_forest), file="Conf_matrix_random_forest.rda")
Conf_matrix_random_forest <- table(Conf_matrix_random_forest)
save(table(Conf_matrix_random_forest), file="Conf_matrix_random_forest.rda")
save(Conf_matrix_random_forest, file="Conf_matrix_random_forest.rda")
load("~/GitHub/Exoplanets_Supervised_Learning/Final_data/Conf_matrix_dec_tree.rda")
Conf_matrix_dec_tree<-table(Conf_matrix_dec_tree)
save(Conf_matrix_dec_tree, file="Conf_matrix_dec_tree.rda")
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(3)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
svm.full <- svm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset[Planets_dataset_train,],type = 'C-classification', kernel="polynomial",cost=5,degree=2,)
plot(svm.full,data=Planets_dataset[Planets_dataset_train,],P_H~S_L, ylim = c(-1, 2)) #projection on P_H vs S_L in, the mistaken one are shown in the decision tree
svm.predict_full<-data.frame(predict(svm.full,Planets_dataset[-Planets_dataset_train,],type = "class"))
svm.predict_full["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
svm_fin_full<-data.frame(svm.predict_full,stringsAsFactors = TRUE)
colnames(svm_fin_full)<-c("Predict","Test")
caret::confusionMatrix(table(svm_fin_full))
fourfoldplot(table(svm_fin_full), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "SVM_FULL")
pred_svm_full<-prediction(as.numeric(svm_fin_full$Predict),as.numeric(svm_fin_full$Test))
roc_svm_full.perf <- performance(pred_svm_full, measure = "tpr", x.measure = "fpr")
phi_svm_full<-performance(pred_svm_full, "mi")
phi_svm_full@y.values
autoplot(roc_svm_full.perf)+theme_bw()
library(readxl)
Conf_matrix_SVM <- read_excel("Final_data/Strumenti/Conf_matrix_SVM.xlsx")
View(Conf_matrix_SVM)
Conf_matrix_SVM<-table(Conf_matrix_SVM)
save(Conf_matrix_SVM,file="Conf_matrix_SVM.rda")
caret::confusionMatrix(Conf_matrix_SVM)
fourfoldplot(Conf_matrix_SVM, color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Random Forest Performance")
fourfoldplot(Conf_matrix_SVM, color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Conf_matrix_SVM")
pred_gen<-prediction(as.numeric(Conf_matrix_random_forest$P),as.numeric(Conf_matrix_random_forest$T))
library(readxl)
Conf_matrix_SVM <- read_excel("Final_data/Strumenti/Conf_matrix_SVM.xlsx")
View(Conf_matrix_SVM)
pred_gen<-prediction(as.numeric(Conf_matrix_SVM$P),as.numeric(Conf_matrix_SVM$T))
roc_gen.perf <- performance(pred_gen, measure = "tpr", x.measure = "fpr")
phi_gen<-performance(pred_gen, "phi")
plot(phi_lda)
autoplot(roc_gen.perf)+ggtitle("Random Forest Performance")+theme_bw()
fourfoldplot(table(Conf_matrix_SVM), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "SVM Performance")
tune_dec.out=tune(rpart ,P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T, data= Planets_dataset[Planets_dataset_train,],method="class", minsplit = c(5,10,15))
une_dec.out=tune(rpart ,P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T, data= Planets_dataset[Planets_dataset_train,],method="class", minsplit = c(2:4))
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
#pca.planet <- prcomp(pca.train[,2:15], center = TRUE,scale. = TRUE)
#pca.planet.test  <-  predict(pca.planet, pca.test[,2:15])
#pca.train[,12]<-as.factor(pca.train[,12])
#pca.train[,15]<-as.factor(pca.train[,15])
#pca.test[,12]<-as.factor(pca.test[,12])
#pca.test[,15]<-as.factor(pca.test[,15])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
fviz_famd_var(FAMD_planets.out,"quanti.var", col.var = "cos2",gradient.cols = c("red","orange","blue"),repel = TRUE,col.circle = "black" ) +theme_bw()
pca_mix_out<-data.frame(pca_mix_out[["ind"]][["coord"]])
train_mix<-pca_mix_out[1:2]
train_mix["H"]<-pca.train[,12]
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.009, 1, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.00, 5, by = 0.01))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 5, by = 0.01))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 1, by = 0.01))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.5, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.2, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.1, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.51, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.05, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
svm.planet_mix <- ksvm(H~.,data=train_mix,type = 'C-svc', kernel="vanilladot",C=0.016)
plot(svm.planet_mix,data=train_mix)
svm.predict_mix<-data.frame(predict(svm.planet_mix,pca_mix.planet.test[,1:2]))
colnames(svm.predict_mix)[1]<-"H"
svm.predict_mix["T"]<-as.factor(pca.test[,12])
svm_fin_mix<-data.frame(svm.predict_mix,stringsAsFactors = TRUE)
colnames(svm_fin_mix)<-c("Predict","Test")
caret::confusionMatrix(table(svm_fin_mix))
fourfoldplot(table(svm_fin_mix), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "SVM")
pred_svm<-prediction(as.numeric(svm_fin_mix$Predict),as.numeric(svm_fin_mix$Test))
roc_svm.perf <- performance(pred_svm, measure = "tpr", x.measure = "fpr")
phi_svm<-performance(pred_svm, "mi")
phi_svm@y.values
autoplot(roc_svm.perf)+theme_bw()
svm.planet_mix <- ksvm(H~.,data=train_mix,type = 'C-svc', kernel="vanilladot",C=0.016)
plot(svm.planet_mix,data=train_mix)
svm.predict_mix<-data.frame(predict(svm.planet_mix,pca_mix.planet.test[,1:2]))
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix_out<-data.frame(pca_mix_out[["ind"]][["coord"]])
View(pca_mix_out)
test_mix["T"]<-pca.test[,12]
View(train_mix)
pca.test[,-c(1,12,15)]
pca.test[,c(12,15)]
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict.PCAmix(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
pca_mix.planet.test  <-  predict.PCAmix(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
?predict.PCAmix
pca_mix.planet.test  <-  PCAmix::predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  PCAmixdata::predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca.train[,-c(1,12,15)]
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca.train[,c(12)]
pca.test[,c(12)]
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
View(pca.test)
View(pca.train)
View(pca.test)
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix_out<-data.frame(pca_mix_out[["ind"]][["coord"]])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
View(pca_mix_out)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out,pca.train[,-c(1,12,15)],pca.train[,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[,-c(1,12,15)],Planets_dataset[,c(12)])
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(Planets_dataset[,-c(1,15)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
#pca.planet <- prcomp(pca.train[,2:15], center = TRUE,scale. = TRUE)
#pca.planet.test  <-  predict(pca.planet, pca.test[,2:15])
#pca.train[,12]<-as.factor(pca.train[,12])
#pca.train[,15]<-as.factor(pca.train[,15])
#pca.test[,12]<-as.factor(pca.test[,12])
#pca.test[,15]<-as.factor(pca.test[,15])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
#pca.planet <- prcomp(pca.train[,2:15], center = TRUE,scale. = TRUE)
#pca.planet.test  <-  predict(pca.planet, pca.test[,2:15])
#pca.train[,12]<-as.factor(pca.train[,12])
#pca.train[,15]<-as.factor(pca.train[,15])
#pca.test[,12]<-as.factor(pca.test[,12])
#pca.test[,15]<-as.factor(pca.test[,15])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
#library(FactoMineR)
library(plotly)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
Planets_dataset[-Planets_dataset_train,-c(1,12,15)]
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],as.factor(Planets_dataset[Planets_dataset_train,c(12)]))
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],as.factor(Planets_dataset[-Planets_dataset_train,c(12)]))
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
View(Planets_dataset_test)
View(Planets_dataset)
View(Planets_dataset_test)
Planets_dataset[Planets_dataset_train,c(12)]
Planets_dataset[-Planets_dataset_train,c(12)]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
View(pca_mix_out)
pca_mix_out[["quali"]]
pca_mix_out[["levels.sup"]]
pca_mix_out[["rec"]]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)],ndim=2)
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
