plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.51, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
tune_svm_mix.out=tune(svm ,H~.,data=train_mix, kernel="linear", ranges =list(cost=c(seq(0.01, 0.05, by = 0.001))))
print(tune_svm_mix.out)
plot(tune_svm_mix.out,type="contour",mar = c(2, 1, 1, 2))
svm.planet_mix <- ksvm(H~.,data=train_mix,type = 'C-svc', kernel="vanilladot",C=0.016)
plot(svm.planet_mix,data=train_mix)
svm.predict_mix<-data.frame(predict(svm.planet_mix,pca_mix.planet.test[,1:2]))
colnames(svm.predict_mix)[1]<-"H"
svm.predict_mix["T"]<-as.factor(pca.test[,12])
svm_fin_mix<-data.frame(svm.predict_mix,stringsAsFactors = TRUE)
colnames(svm_fin_mix)<-c("Predict","Test")
caret::confusionMatrix(table(svm_fin_mix))
fourfoldplot(table(svm_fin_mix), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "SVM")
pred_svm<-prediction(as.numeric(svm_fin_mix$Predict),as.numeric(svm_fin_mix$Test))
roc_svm.perf <- performance(pred_svm, measure = "tpr", x.measure = "fpr")
phi_svm<-performance(pred_svm, "mi")
phi_svm@y.values
autoplot(roc_svm.perf)+theme_bw()
svm.planet_mix <- ksvm(H~.,data=train_mix,type = 'C-svc', kernel="vanilladot",C=0.016)
plot(svm.planet_mix,data=train_mix)
svm.predict_mix<-data.frame(predict(svm.planet_mix,pca_mix.planet.test[,1:2]))
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix_out<-data.frame(pca_mix_out[["ind"]][["coord"]])
View(pca_mix_out)
test_mix["T"]<-pca.test[,12]
View(train_mix)
pca.test[,-c(1,12,15)]
pca.test[,c(12,15)]
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict.PCAmix(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
pca_mix.planet.test  <-  predict.PCAmix(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
?predict.PCAmix
pca_mix.planet.test  <-  PCAmix::predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  PCAmixdata::predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca.train[,-c(1,12,15)]
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,12])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca.train[,c(12)]
pca.test[,c(12)]
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
View(pca.test)
View(pca.train)
View(pca.test)
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
pca_mix_out<-data.frame(pca_mix_out[["ind"]][["coord"]])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
View(pca_mix_out)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out,pca.train[,-c(1,12,15)],pca.train[,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[,-c(1,12,15)],Planets_dataset[,c(12)])
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(Planets_dataset[,-c(1,15)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
View(pca_mix_out)
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
#pca.planet <- prcomp(pca.train[,2:15], center = TRUE,scale. = TRUE)
#pca.planet.test  <-  predict(pca.planet, pca.test[,2:15])
#pca.train[,12]<-as.factor(pca.train[,12])
#pca.train[,15]<-as.factor(pca.train[,15])
#pca.test[,12]<-as.factor(pca.test[,12])
#pca.test[,15]<-as.factor(pca.test[,15])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca.train<-Planets_dataset[Planets_dataset_train,]
pca.test<-Planets_dataset[-Planets_dataset_train,]
#pca.planet <- prcomp(pca.train[,2:15], center = TRUE,scale. = TRUE)
#pca.planet.test  <-  predict(pca.planet, pca.test[,2:15])
#pca.train[,12]<-as.factor(pca.train[,12])
#pca.train[,15]<-as.factor(pca.train[,15])
#pca.test[,12]<-as.factor(pca.test[,12])
#pca.test[,15]<-as.factor(pca.test[,15])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12,15)])
pca_mix_out<-PCAmix(pca.train[,-c(1,12,15)],pca.train[,c(12)],rename.level=TRUE)
plot(pca_mix_out,choice="sqload",coloring.var = TRUE,main="All variables",posleg="topright")
FAMD_planets.out<-FAMD(pca.train[,-c(1,15)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib")
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib")
pca_mix.planet.test  <-  predict(pca_mix_out, pca.test[,-c(1,12,15)],pca.test[,c(12)])
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
#library(FactoMineR)
library(plotly)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
Planets_dataset[-Planets_dataset_train,-c(1,12,15)]
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],as.factor(Planets_dataset[Planets_dataset_train,c(12)]))
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],as.factor(Planets_dataset[-Planets_dataset_train,c(12)]))
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
View(Planets_dataset_test)
View(Planets_dataset)
View(Planets_dataset_test)
Planets_dataset[Planets_dataset_train,c(12)]
Planets_dataset[-Planets_dataset_train,c(12)]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)])
View(pca_mix_out)
pca_mix_out[["quali"]]
pca_mix_out[["levels.sup"]]
pca_mix_out[["rec"]]
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12)],ndim=2)
pca_mix.planet.test  <- predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12)])
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,CV=true)
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(4)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,CV=true)
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,CV=T)
View(pca.planet)
View(qda.planet)
qda.planet[["posterior"]]
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,CV=T,method
=t)
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,CV=T,method="t")
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train,method="t")
View(qda.planet)
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(pca.test[,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
#partimat(P_H ~ S_L+P_T_E, data=Planets_dataset[Planets_dataset_train,], method="qda")
#plot(qda.planet,P_H~S_L)
#glm.planet
#summary(glm.planet)
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(pca.test[,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(pca.test[,12])
qda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
library(klaR)
partimat(P_H ~ ., data=Planets_dataset, method="qda", subset=Planets_dataset_train)
decisionplot(qda.prob,Planets_dataset_train,Class ="P_H")
library(MASS)
decisionplot(qda.prob,Planets_dataset_train,Class ="P_H")
partimat(P_H ~ ., data = Planets_dataset_train, method = "qda")
partimat(P_H ~ , data = Planets_dataset_train, method = "qda")
partimat(P_H ~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M , data = Planets_dataset_train, method = "qda")
partimat(P_H ~. , data = Planets_dataset_train, method = "qda")
partimat(P_H ~ P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M , data = Planets_dataset_train, method = "qda")
plot(qda.prob)
plot(qda.planet)
plot(qda.planet)
plot(qda.planet,dimen = 1, type = "b")
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
print(qda.planet)
partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset,],method="qda")
Planets_dataset[Planets_dataset,]
Planets_dataset[Planets_dataset_train,]
partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
par(mar=c(1,1,1,1))
partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
par(mar=c(1,1,1,1))
partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",mar=c(5,4,2,2))
pdf('myplot.pdf')
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",mar=c(5,4,2,2))
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
X11(width=15, height=15)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
X11(width=30, height=30)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
X11(width=5, height=5)
X11(width=60, height=60)
X11(width=60, height=40)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda")
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4,nplots.vert=4,nplots.hor=4
)
X11(width=80, height=50)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
X11(width=60, height=40)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
peppo<-partimat(P_H~S_L+S_T+S_S_T+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
peppo<-partimat(P_H~S_L+S_T+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
peppo<-partimat(P_H~S_L+S_T+S_S_T+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
X11(width=60, height=60)
peppo<-partimat(P_H~S_L+S_T+S_S_T+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
peppo<-partimat(P_H~S_L+S_T+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
X11(width=60, height=60)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
X11(width=60, height=60)
peppo<-partimat(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
peppo<-partimat(P_H~S_T+P_D+P_PN+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
print(qda.planet)
#X11(width=60, height=60)
peppo<-partimat(P_H~S_T+P_D+P_PN+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4
)
plot(qda.planet,dimen = 1, type = "b")
#partimat(P_H ~ S_L+P_T_E, data=Planets_dataset[Planets_dataset_train,], method="qda")
#plot(qda.planet,P_H~S_L)
#glm.planet
#summary(glm.planet)
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
print(qda.planet)
#X11(width=60, height=60)
#partimat(P_H~S_T+P_D+P_PN+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4)
plot(qda.planet,dimen = 1, type = "b")
#partimat(P_H ~ S_L+P_T_E, data=Planets_dataset[Planets_dataset_train,], method="qda")
#plot(qda.planet,P_H~S_L)
#glm.planet
#summary(glm.planet)
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
print(qda.planet)
#X11(width=60, height=60)
#partimat(P_H~S_T+P_D+P_PN+P_T_E+S_R_E+S_L+P_R+P_M,data=Planets_dataset[Planets_dataset_train,],method="qda",nplots.vert=4)
plot(qda.planet,dimen = 1, type = "b")
#partimat(P_H ~ S_L+P_T_E, data=Planets_dataset[Planets_dataset_train,], method="qda")
#plot(qda.planet,P_H~S_L)
#glm.planet
#summary(glm.planet)
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
pred_qda<-prediction(as.numeric(qda_fin$Predict),as.numeric(qda_fin$Test))
roc_qda.perf <- performance(pred_qda, measure = "tpr", x.measure = "fpr")
phi_qda<-performance(pred_qda, "phi")
plot(phi_qda)
autoplot(roc_qda.perf)+theme_bw()
