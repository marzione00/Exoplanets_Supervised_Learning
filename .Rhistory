#plot(lda.planet)
#glm.planet
#summary(glm.planet)
lda.prob<-data.frame(predict(lda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
lda.prob<-lda.prob["class"]
lda_fin<-data.frame(lda.prob,stringsAsFactors = TRUE)
lda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(lda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(lda_fin))
fourfoldplot(table(lda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "LDA")
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_lda.perf <- performance(pred_lda, measure = "tpr", x.measure = "fpr")
phi_lda<-performance(pred_lda, "phi")
plot(phi_lda)
autoplot(roc_lda.perf)+theme_bw()
set.seed(7)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
lda.planet<- lda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
#X11(width=60, height=60)
#partimat(P_H~S_T+S_L+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="lda",nplots.vert=4)
#plot(lda.planet)
#glm.planet
#summary(glm.planet)
lda.prob<-data.frame(predict(lda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
lda.prob<-lda.prob["class"]
lda_fin<-data.frame(lda.prob,stringsAsFactors = TRUE)
lda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(lda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(lda_fin))
fourfoldplot(table(lda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "LDA")
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_lda.perf <- performance(pred_lda, measure = "tpr", x.measure = "fpr")
phi_lda<-performance(pred_lda, "phi")
plot(phi_lda)
autoplot(roc_lda.perf)+theme_bw()
set.seed(8)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
lda.planet<- lda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
#X11(width=60, height=60)
#partimat(P_H~S_T+S_L+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="lda",nplots.vert=4)
#plot(lda.planet)
#glm.planet
#summary(glm.planet)
lda.prob<-data.frame(predict(lda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
lda.prob<-lda.prob["class"]
lda_fin<-data.frame(lda.prob,stringsAsFactors = TRUE)
lda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(lda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(lda_fin))
fourfoldplot(table(lda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "LDA")
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_lda.perf <- performance(pred_lda, measure = "tpr", x.measure = "fpr")
phi_lda<-performance(pred_lda, "phi")
plot(phi_lda)
autoplot(roc_lda.perf)+theme_bw()
set.seed(9)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
lda.planet<- lda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
#X11(width=60, height=60)
#partimat(P_H~S_T+S_L+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="lda",nplots.vert=4)
#plot(lda.planet)
#glm.planet
#summary(glm.planet)
lda.prob<-data.frame(predict(lda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
lda.prob<-lda.prob["class"]
lda_fin<-data.frame(lda.prob,stringsAsFactors = TRUE)
lda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(lda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(lda_fin))
fourfoldplot(table(lda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "LDA")
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_lda.perf <- performance(pred_lda, measure = "tpr", x.measure = "fpr")
phi_lda<-performance(pred_lda, "phi")
plot(phi_lda)
autoplot(roc_lda.perf)+theme_bw()
set.seed(10)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
lda.planet<- lda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
#X11(width=60, height=60)
#partimat(P_H~S_T+S_L+P_T_E,data=Planets_dataset[Planets_dataset_train,],method="lda",nplots.vert=4)
#plot(lda.planet)
#glm.planet
#summary(glm.planet)
lda.prob<-data.frame(predict(lda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
lda.prob<-lda.prob["class"]
lda_fin<-data.frame(lda.prob,stringsAsFactors = TRUE)
lda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(lda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(lda_fin))
fourfoldplot(table(lda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "LDA")
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_lda.perf <- performance(pred_lda, measure = "tpr", x.measure = "fpr")
phi_lda<-performance(pred_lda, "phi")
plot(phi_lda)
autoplot(roc_lda.perf)+theme_bw()
Conf_matrix_dec_tree <- read_excel("Final_data/Strumenti/Conf_matrix_LDA.xlsx")
caret::confusionMatrix(table(Conf_matrix_dec_tree))
fourfoldplot(table(Conf_matrix_dec_tree), color = c("red","darkgreen"),conf.level = 0, margin = 1)
pred_gen<-prediction(as.numeric(Conf_matrix_dec_tree$P),as.numeric(Conf_matrix_dec_tree$T))
roc_gen.perf <- performance(pred_gen, measure = "tpr", x.measure = "fpr")
phi_gen<-performance(pred_gen, "phi")
print(phi_gen)
autoplot(roc_gen.perf)+theme_bw()
View(phi_gen)
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,Planets_dataset_train])
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
plot(model)
plot(model)
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
View(logistic.prob)
View(logistic.prob)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
View(logistic.prob)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob[P>0.5]="1"
logistic.prob[,P>0.5]="1"
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- ifelse(logistic.prob > 0.5, "1", "0")
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "1", "0"))
View(logistic.prob)
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
View(lda.prob)
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "1", "0"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
View(logistic.prob)
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
View(logistic.prob)
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(1)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(2)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(3)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(4)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(5)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(6)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(7)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(8)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(9)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
set.seed(10)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
model <- glm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M,family=binomial(link='logit'),data=Planets_dataset[,-c(1)])
summary(model)
logistic.prob<-data.frame(predict(model ,Planets_dataset[-Planets_dataset_train,],type = "response"))
colnames(logistic.prob)<-c("P")
logistic.prob<- data.frame(ifelse(logistic.prob > 0.5, "True", "False"))
logistic.prob["T"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
fourfoldplot(table(logistic.prob), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Logistic")
Conf_matrix_dec_tree <- read_excel("Final_data/Strumenti/Conf_matrix_log.xlsx")
caret::confusionMatrix(table(Conf_matrix_dec_tree))
fourfoldplot(table(Conf_matrix_dec_tree), color = c("red","darkgreen"),conf.level = 0, margin = 1)
pred_gen<-prediction(as.numeric(Conf_matrix_dec_tree$P),as.numeric(Conf_matrix_dec_tree$T))
roc_gen.perf <- performance(pred_gen, measure = "tpr", x.measure = "fpr")
phi_gen<-performance(pred_gen, "phi")
print(phi_gen)
autoplot(roc_gen.perf)+theme_bw()
View(phi_gen)
Planet_not_habitable<-subset(Planets_dataset,P_HABITABLE==0)
ggdensity(Planet_not_habitable$S_L)
Planet_not_habitable<-subset(Planets_dataset,P_H==0)
ggdensity(Planet_not_habitable$S_L)
View(Planet_not_habitable)
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
ggdensity(Planet_not_habitable$S_L)
Planet_not_habitable<-subset(Planets_dataset)
ggdensity(Planet_not_habitable$S_L)
autoplot(ggdensity(Planet_not_habitable$S_L))
plot<-ggdensity(Planet_not_habitable$S_L)
View(plot)
autoplot(gg)
plot<-ggdensity(Planet_not_habitable$S_L)
autoplot(plot)
ggdensity(Planet_not_habitable$S_L,fill = "lightgray",
add = "mean", rug = TRUE)
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
Planet_habitable<-subset(Planets_dataset,P_H="True")
ggdensity(Planets_dataset$S_L,color = "P_H" )
View(Planets_dataset)
ggdensity(Planets_dataset$S_L,color = P_H )
ggdensity(Planets_dataset$S_L,rug = TRUE, color = "P_H" )
View(Planets_dataset)
ggdensity(Planets_dataset,rug = TRUE, color = "P_H" )
ggdensity(Planets_dataset,x="S_L",rug = TRUE, color = "P_H" )
ggdensity(Planets_dataset,x="S_L",rug = TRUE, color = "P_H",fill = "P_H" )
ggdensity(Planets_dataset,x="S_L",rug = TRUE, color = "P_H",fill = "P_H",theme_bw() )
ggdensity(Planets_dataset,x="S_L",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_P",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="S_T",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_D",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_PN",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_A",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_D_E",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_F",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_T_E",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
gdensity(Planets_dataset,x="S_R_E",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="S_R_E",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="S_L",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_R",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="P_M",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
ggdensity(Planets_dataset,x="S_S_T",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC<-Planet_not_habitable_FULLC["Full"]
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC["Full"]<-c(1)
View(phl_exoplanet_FULLC)
Planet_not_habitable_FULLC["Full"]<-c("Yes")
View(phl_exoplanet_FULLC)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC$Full<-c("Yes")
View(Planet_not_habitable_FULLC)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
View(check_final)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
View(check_final)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H=="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H=="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
View(check_final)
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_P",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
ggdensity(check_final,x="S_L",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="S_T",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_D",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_PN",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_A",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_D_E",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_F",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_T_E",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
Planet_habitable<-subset(Planets_dataset,P_H="True")
ggdensity(Planets_dataset,x="P_T_E",rug = TRUE, color = "P_H",fill = "P_H" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="S_R_E",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="S_L",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_R",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="P_M",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
phl_exoplanet_FULLC <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_FULLC<-subset(phl_exoplanet_FULLC,P_H="False")
levels(Planet_not_habitable_FULLC$P_H) <- c("False","True")
levels(Planets_dataset$P_H) <- c("False","True")
Planet_not_habitable_FULLC$Full<-c("True")
Planets_dataset$Full<-c("False")
Planet_not_habitable<-subset(Planets_dataset,P_H="False")
check_final<-rbind(Planet_not_habitable,Planet_not_habitable_FULLC)
ggdensity(check_final,x="S_S_T",rug = TRUE, color = "Full",fill = "Full" )+theme_bw()
