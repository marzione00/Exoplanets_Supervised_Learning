
> #########Loading data
> 
> 
> Planets_dataset <- data.frame(read_excel("phl_exoplanet_catalog_FINAL.xlsx"))

> set.seed(9)

> #########Splitting training vs test set
> 
> Planets_dataset_train<- sample(500,350)

> Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]

> #########Plotting the correlation chart
> 
> 
> #chart.Correlation(Planets_dataset[,2:15], histogram=FALSE)
> palette = colorRampPalette(c("green",  .... [TRUNCATED] 

> heatmap(x = cor(Planets_dataset[,2:15]), col = palette, symm = TRUE, margins = c(10, 10),main = 'Planet Features',dist(Planets_dataset[,2:15],method .... [TRUNCATED] 

> #########Decision Tree 
> 
> 
> tune_dec.out=tune(rpart ,P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T, data= Planets_dataset[Pla .... [TRUNCATED] 

> print(tune_dec.out)

Parameter tuning of ‘rpart’:

- sampling method: 10-fold cross validation 

- best parameters:
 minsplit
       11

- best performance: 0.01148745 


> plot(tune_dec.out,type="contour",swapxy = TRUE,mar = c(2, 1, 1, 2))

> tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset,method="class", subset=Planets_dataset_tr .... [TRUNCATED] 

> fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")

> tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))

> rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)

> tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])

> colnames(tree.predict)<-c("Predict","Test")

> caret::confusionMatrix(table(tree.predict))
Confusion Matrix and Statistics

       Test
Predict   0   1
      0 131   6
      1   0  13
                                         
               Accuracy : 0.96           
                 95% CI : (0.915, 0.9852)
    No Information Rate : 0.8733         
    P-Value [Acc > NIR] : 0.0002735      
                                         
                  Kappa : 0.791          
                                         
 Mcnemar's Test P-Value : 0.0412268      
                                         
            Sensitivity : 1.0000         
            Specificity : 0.6842         
         Pos Pred Value : 0.9562         
         Neg Pred Value : 1.0000         
             Prevalence : 0.8733         
         Detection Rate : 0.8733         
   Detection Prevalence : 0.9133         
      Balanced Accuracy : 0.8421         
                                         
       'Positive' Class : 0              
                                         

> fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")

> pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))

> roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")

> autoplot(roc_dec.perf)+theme_bw()

> #########Random Forest
> 
> pippo<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
mtry = 4  OOB error = 0.01141906 
Searching left ...
mtry = 2 	OOB error = 0.01326542 
-0.1616911 0.05 
Searching right ...
mtry = 8 	OOB error = 0.01267516 
-0.1100001 0.05 

> rfor.planet <-randomForest(as.factor(P_H)~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset, subset=Planets_dataset_ .... [TRUNCATED] 

> rfor.predict<-data.frame(predict(rfor.planet, Planets_dataset_test, type = "class"))

> explain_forest(rfor.planet)
  |                                                                                                                                          |                                                                                                                                  |   0%  |                                                                                                                                          |......                                                                                                                            |   5%
   inline R code fragments

  |                                                                                                                                          |.............                                                                                                                     |  10%
label: setup (with options) 
List of 1
 $ include: logi FALSE

  |                                                                                                                                          |....................                                                                                                              |  15%
  ordinary text without R code

  |                                                                                                                                          |..........................                                                                                                        |  20%
label: unnamed-chunk-1
  |                                                                                                                                          |................................                                                                                                  |  25%
  ordinary text without R code

  |                                                                                                                                          |.......................................                                                                                           |  30%
label: unnamed-chunk-2
  |                                                                                                                                          |..............................................                                                                                    |  35%
  ordinary text without R code

  |                                                                                                                                          |....................................................                                                                              |  40%
label: unnamed-chunk-3
  |                                                                                                                                          |..........................................................                                                                        |  45%
  ordinary text without R code

  |                                                                                                                                          |.................................................................                                                                 |  50%
label: unnamed-chunk-4
  |                                                                                                                                          |........................................................................                                                          |  55%
  ordinary text without R code

  |                                                                                                                                          |..............................................................................                                                    |  60%
label: unnamed-chunk-5
  |                                                                                                                                          |....................................................................................                                              |  65%
   inline R code fragments

  |                                                                                                                                          |...........................................................................................                                       |  70%
label: unnamed-chunk-6
  |                                                                                                                                          |..................................................................................................                                |  75%
   inline R code fragments

  |                                                                                                                                          |........................................................................................................                          |  80%
label: unnamed-chunk-7 (with options) 
List of 2
 $ fig.width : num 10
 $ fig.height: num 9

  |                                                                                                                                          |..............................................................................................................                    |  85%
  ordinary text without R code

  |                                                                                                                                          |.....................................................................................................................             |  90%
label: unnamed-chunk-8 (with options) 
List of 2
 $ fig.width : num 10
 $ fig.height: num 9

  |                                                                                                                                          |............................................................................................................................      |  95%
  ordinary text without R code

  |                                                                                                                                          |..................................................................................................................................| 100%
label: conditional_print (with options) 
List of 2
 $ child: chr "Explain_forest_template_interactions.Rmd"
 $ eval : symbol interactions


"C:/Program Files/RStudio/bin/pandoc/pandoc" +RTS -K512m -RTS Explain_forest_template.utf8.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output pandoc3f7416464932.html --email-obfuscation none --self-contained --standalone --section-divs --table-of-contents --toc-depth 3 --variable toc_float=1 --variable toc_selectors=h1,h2,h3 --variable toc_collapsed=1 --variable toc_smooth_scroll=1 --variable toc_print=1 --template "C:\Users\Marzio\Documents\R\win-library\3.6\rmarkdown\rmd\h\default.html" --no-highlight --variable highlightjs=1 --variable "theme:bootstrap" --include-in-header "C:\Users\Marzio\AppData\Local\Temp\Rtmpmu4sCU\rmarkdown-str3f74646e6035.html" --mathjax --variable "mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" --lua-filter "C:/Users/Marzio/Documents/R/win-library/3.6/rmarkdown/rmd/lua/pagebreak.lua" --lua-filter "C:/Users/Marzio/Documents/R/win-library/3.6/rmarkdown/rmd/lua/latex-div.lua" 

> plot(rfor.planet)

> legend("top", colnames(rfor.planet$err.rate), fill=1:ncol(rfor.planet$err.rate))

> varImpPlot(rfor.planet)

> proximityPlot(rfor.planet)

> #print(rfor.planet)
> #print(importance(rfor.planet,type=2))
> 
> rfor.predict["Test"]<-as.factor(Planets_dataset_test[,12])

> colnames(rfor.predict)<-c("Predict","Test")

> caret::confusionMatrix(table(rfor.predict))
Confusion Matrix and Statistics

       Test
Predict   0   1
      0 131   7
      1   0  12
                                         
               Accuracy : 0.9533         
                 95% CI : (0.9062, 0.981)
    No Information Rate : 0.8733         
    P-Value [Acc > NIR] : 0.0008704      
                                         
                  Kappa : 0.7496         
                                         
 Mcnemar's Test P-Value : 0.0233422      
                                         
            Sensitivity : 1.0000         
            Specificity : 0.6316         
         Pos Pred Value : 0.9493         
         Neg Pred Value : 1.0000         
             Prevalence : 0.8733         
         Detection Rate : 0.8733         
   Detection Prevalence : 0.9200         
      Balanced Accuracy : 0.8158         
                                         
       'Positive' Class : 0              
                                         

> fourfoldplot(table(rfor.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Random Forest")

> pred_for<-prediction(as.numeric(rfor.predict$Predict),as.numeric(rfor.predict$Test))

> roc_for.perf <- performance(pred_for, measure = "tpr", x.measure = "fpr")

> autoplot(roc_for.perf)+theme_bw()

> #########SVM 
> 
> 
> tune_svm_full.out<-tune(svm ,P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset[Planets_dat .... [TRUNCATED] 

> print(tune_svm_full.out)

Parameter tuning of ‘svm’:

- sampling method: 10-fold cross validation 

- best parameters:
  cost
 0.444

- best performance: 0.03321667 


> plot(tune_svm_full.out,type="contour",swapxy = TRUE,mar = c(2, 1, 1, 2))

> svm.full <- svm(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T, data=Planets_dataset[Planets_dataset_train,],type = 'C-classificat .... [TRUNCATED] 

> plot(svm.full,data=Planets_dataset[Planets_dataset_train,],P_H~S_L, ylim = c(-1, 2)) #projection on P_H vs S_L in, the mistaken one are shown in the .... [TRUNCATED] 

> svm.predict_full<-data.frame(predict(svm.full,Planets_dataset[Planets_dataset_train,],type = "class"))

> svm.predict_full["T"]<-as.factor(Planets_dataset[Planets_dataset_train,12])

> svm_fin_full<-data.frame(svm.predict_full,stringsAsFactors = TRUE)

> colnames(svm_fin_full)<-c("Predict","Test")

> caret::confusionMatrix(table(svm_fin_full))
Confusion Matrix and Statistics

       Test
Predict   0   1
      0 314   6
      1   0  30
                                          
               Accuracy : 0.9829          
                 95% CI : (0.9631, 0.9937)
    No Information Rate : 0.8971          
    P-Value [Acc > NIR] : 2.067e-10       
                                          
                  Kappa : 0.8997          
                                          
 Mcnemar's Test P-Value : 0.04123         
                                          
            Sensitivity : 1.0000          
            Specificity : 0.8333          
         Pos Pred Value : 0.9813          
         Neg Pred Value : 1.0000          
             Prevalence : 0.8971          
         Detection Rate : 0.8971          
   Detection Prevalence : 0.9143          
      Balanced Accuracy : 0.9167          
                                          
       'Positive' Class : 0               
                                          

> fourfoldplot(table(svm_fin_full), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "SVM_FULL")

> pred_svm_full<-prediction(as.numeric(svm_fin_full$Predict),as.numeric(svm_fin_full$Test))

> roc_svm_full.perf <- performance(pred_svm_full, measure = "tpr", x.measure = "fpr")

> phi_svm_full<-performance(pred_svm_full, "mi")

> phi_svm_full@y.values
[[1]]
[1]       NaN 0.3551411       NaN


> autoplot(roc_svm_full.perf)+theme_bw()
