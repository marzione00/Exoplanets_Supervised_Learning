Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
View(Planets_dataset_test)
View(Planets_dataset)
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
library(klaR)
library(car)
library(ggpubr)
library(cairoDevice)
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
plot(caret::varImp(tree.planet,surrogates = FALSE, competes = TRUE))
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
autoplot(roc_dec.perf)+theme_bw()
RF_perf_out<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
RF_perf_out<-data.frame(RF_perf_out)
ggplot(RF_perf_out,aes(x=mtry, y=OOBError))+geom_line(color="red",linetype="dashed")+geom_point(color="red")+theme_bw()
rfor.planet <-randomForest(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset, subset=Planets_dataset_train,localImp = TRUE,importance=TRUE,proximity=TRUE,ntry=4)
rfor.predict<-data.frame(predict(rfor.planet, Planets_dataset_test, type = "class"))
#explain_forest(rfor.planet)
var_imp_rforest<-data.frame(varImp(rfor.planet))
colnames(var_imp_rforest)<-c("Variable","Overall")
var_imp_rforest[,1]<-rownames(var_imp_rforest)
rownames(var_imp_rforest)<-seq(1:13)
ggplot(var_imp_rforest, aes(y=reorder(Variable,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=Variable)) +
scale_color_discrete(name="Variable Group") +
xlab("Overall importance") +
ylab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
plot(rfor.planet)
tree_plot<-data.frame(rfor.planet[["err.rate"]])
tree_plot[4]<-seq(1:500)
colnames(tree_plot)<-c("OOB","Not_habitable","Habitable","Trees")
ggplot() + geom_line(data = tree_plot, aes(x = Trees, y = OOB,color = "OOB") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Not_habitable,color = "Not H") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Habitable,color = "H") )+labs(color = "Legend")+theme() + xlab('Trees') + ylab('Error')+theme_bw()
plot(rfor.planet)
legend("top", colnames(rfor.planet$err.rate), fill=1:ncol(rfor.planet$err.rate))
varImpPlot(rfor.planet)
proximityPlot(rfor.planet)
print(rfor.planet)
rfor.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(rfor.predict)<-c("Predict","Test")
fourfoldplot(table(rfor.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Random Forest")
pred_for<-prediction(as.numeric(rfor.predict$Predict),as.numeric(rfor.predict$Test))
roc_for.perf <- performance(pred_for, measure = "tpr", x.measure = "fpr")
autoplot(roc_for.perf)+theme_bw()
library(readxl)
library(ISLR)
library(readxl)
library(devtools)
library(ggfortify)
library(ggrepel)
library(ggplot2)
library(corrplot)
library(factoextra)
library(dendextend)
library(mdendro)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(randomForestExplainer)
library(rpart.plot)
library(visreg)
library(rfPermute)
library(rattle)
library(PerformanceAnalytics)
library(e1071)
library(InformationValue)
library(ROCR)
library(logistf)
library(MASS)
library(pca3d)
library(doParallel)
library(kernlab)
library(klaR)
library(PCAmixdata)
library(ggplotify)
library(FactoMineR)
library(plotly)
library(klaR)
library(car)
library(ggpubr)
library(cairoDevice)
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
plot(caret::varImp(tree.planet,surrogates = FALSE, competes = TRUE))
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
autoplot(roc_dec.perf)+theme_bw()
RF_perf_out<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
RF_perf_out<-data.frame(RF_perf_out)
ggplot(RF_perf_out,aes(x=mtry, y=OOBError))+geom_line(color="red",linetype="dashed")+geom_point(color="red")+theme_bw()
rfor.planet <-randomForest(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset, subset=Planets_dataset_train,localImp = TRUE,importance=TRUE,proximity=TRUE,ntry=4)
rfor.predict<-data.frame(predict(rfor.planet, Planets_dataset_test, type = "class"))
#explain_forest(rfor.planet)
var_imp_rforest<-data.frame(varImp(rfor.planet))
colnames(var_imp_rforest)<-c("Variable","Overall")
var_imp_rforest[,1]<-rownames(var_imp_rforest)
rownames(var_imp_rforest)<-seq(1:13)
ggplot(var_imp_rforest, aes(y=reorder(Variable,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=Variable)) +
scale_color_discrete(name="Variable Group") +
xlab("Overall importance") +
ylab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
plot(rfor.planet)
tree_plot<-data.frame(rfor.planet[["err.rate"]])
tree_plot[4]<-seq(1:500)
colnames(tree_plot)<-c("OOB","Not_habitable","Habitable","Trees")
ggplot() + geom_line(data = tree_plot, aes(x = Trees, y = OOB,color = "OOB") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Not_habitable,color = "Not H") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Habitable,color = "H") )+labs(color = "Legend")+theme() + xlab('Trees') + ylab('Error')+theme_bw()
plot(rfor.planet)
legend("top", colnames(rfor.planet$err.rate), fill=1:ncol(rfor.planet$err.rate))
varImpPlot(rfor.planet)
proximityPlot(rfor.planet)
print(rfor.planet)
rfor.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(rfor.predict)<-c("Predict","Test")
fourfoldplot(table(rfor.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Random Forest")
pred_for<-prediction(as.numeric(rfor.predict$Predict),as.numeric(rfor.predict$Test))
roc_for.perf <- performance(pred_for, measure = "tpr", x.measure = "fpr")
autoplot(roc_for.perf)+theme_bw()
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
plot(caret::varImp(tree.planet,surrogates = FALSE, competes = TRUE))
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
autoplot(roc_dec.perf)+theme_bw()
##############
#Random Forest
##############
RF_perf_out<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
RF_perf_out<-data.frame(RF_perf_out)
ggplot(RF_perf_out,aes(x=mtry, y=OOBError))+geom_line(color="red",linetype="dashed")+geom_point(color="red")+theme_bw()
rfor.planet <-randomForest(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset, subset=Planets_dataset_train,localImp = TRUE,importance=TRUE,proximity=TRUE,ntry=4)
rfor.predict<-data.frame(predict(rfor.planet, Planets_dataset_test, type = "class"))
#explain_forest(rfor.planet)
var_imp_rforest<-data.frame(varImp(rfor.planet))
colnames(var_imp_rforest)<-c("Variable","Overall")
var_imp_rforest[,1]<-rownames(var_imp_rforest)
rownames(var_imp_rforest)<-seq(1:13)
ggplot(var_imp_rforest, aes(y=reorder(Variable,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=Variable)) +
scale_color_discrete(name="Variable Group") +
xlab("Overall importance") +
ylab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
plot(rfor.planet)
tree_plot<-data.frame(rfor.planet[["err.rate"]])
tree_plot[4]<-seq(1:500)
colnames(tree_plot)<-c("OOB","Not_habitable","Habitable","Trees")
ggplot() + geom_line(data = tree_plot, aes(x = Trees, y = OOB,color = "OOB") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Not_habitable,color = "Not H") ) +
geom_line(data = tree_plot, aes(x = Trees, y = Habitable,color = "H") )+labs(color = "Legend")+theme() + xlab('Trees') + ylab('Error')+theme_bw()
plot(rfor.planet)
legend("top", colnames(rfor.planet$err.rate), fill=1:ncol(rfor.planet$err.rate))
varImpPlot(rfor.planet)
proximityPlot(rfor.planet)
print(rfor.planet)
rfor.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(rfor.predict)<-c("Predict","Test")
fourfoldplot(table(rfor.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Random Forest")
pred_for<-prediction(as.numeric(rfor.predict$Predict),as.numeric(rfor.predict$Test))
roc_for.perf <- performance(pred_for, measure = "tpr", x.measure = "fpr")
autoplot(roc_for.perf)+theme_bw()
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
pca_mix_out<-PCAmix(Planets_dataset[Planets_dataset_train,-c(1,12,15)],Planets_dataset[Planets_dataset_train,c(12,15)],rename.level=TRUE)
pca_mix.planet.test  <-  predict(pca_mix_out, Planets_dataset[-Planets_dataset_train,-c(1,12,15)],Planets_dataset[-Planets_dataset_train,c(12,15)])
plot(pca_mix_out,choice="cor",coloring.var = TRUE,main="All variables")
FAMD_planets.out<-FAMD(Planets_dataset[,-c(1)])
plot(FAMD_planets.out)
fviz_famd_var(FAMD_planets.out, "var", col.var = "contrib",repel=TRUE)
quali.var <- get_famd_var(FAMD_planets.out, "quali.var")
fviz_famd_var(FAMD_planets.out, "quali.var",col.var = "contrib",repel=TRUE)
fviz_famd_var(FAMD_planets.out,"quanti.var", col.var = "cos2",gradient.cols = c("red","orange","blue"),repel = TRUE,col.circle = "black") +theme_bw()
source('~/GitHub/Exoplanets_Supervised_Learning/Manuscript/Script.R', echo=TRUE)
pred_lda<-prediction(as.numeric(lda_fin$Predict),as.numeric(lda_fin$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
View(pred_dec)
View(pred_dec)
View(tree.predict)
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
#tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
plot(caret::varImp(tree.planet,surrogates = FALSE, competes = TRUE))
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
autoplot(roc_dec.perf)+theme_bw()
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
levels(Planets_dataset$P_H) <- c("False","True")
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
plot(caret::varImp(tree.planet,surrogates = FALSE, competes = TRUE))
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
#########Loading data and randomly extracting the no-habitable planets
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
levels(Planets_dataset$P_H) <- c("False","True")
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
chart.Correlation(Planets_dataset[,-c(1,12,15)],histogram=TRUE, pch="+")
##############
#Decision Tree
##############
tree.planet <- rpart(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,method="class",data=Planets_dataset, subset=Planets_dataset_train,minsplit = 5)
var_imp_dec_tree<-data.frame(caret::varImp(tree.planet) %>%
rownames_to_column() %>%
arrange(desc(Overall)) %>%
slice(1:10))
ggplot(var_imp_dec_tree, aes(y=reorder(rowname,Overall),x=Overall,color="red")) +
geom_point() +
geom_segment(aes(x=0,xend=Overall,yend=rowname)) +
scale_color_discrete(name="Variable Group") +
ylab("Overall importance") +
xlab("Variable Name") + guides(color = FALSE, size = FALSE) + theme_bw()
fancyRpartPlot(tree.planet,sub = "Planets Habitability", palettes = "OrRd")
tree.predict<-data.frame(predict(tree.planet, Planets_dataset_test, type = "class"))
rpart.plot(tree.planet,box.palette=c("red", "green"),digits=4,extra=106)
tree.predict["Test"]<-as.factor(Planets_dataset_test[,12])
colnames(tree.predict)<-c("Predict","Test")
fourfoldplot(table(tree.predict), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "Decision Tree")
pred_dec<-prediction(as.numeric(tree.predict$Predict),as.numeric(tree.predict$Test))
roc_dec.perf <- performance(pred_dec, measure = "tpr", x.measure = "fpr")
autoplot(roc_dec.perf)+theme_bw()
source('~/GitHub/Exoplanets_Supervised_Learning/Manuscript/Script.R', echo=TRUE)
View(Planets_dataset)
RF_perf_out<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
Planets_dataset[Planets_dataset_train,-c(12,1)]
View(Planets_dataset)
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
levels(Planets_dataset$P_H) <- c("False","True")
set.seed(0)
View(Planets_dataset)
phl_exoplanet_catalog_RENAMED <- data.frame(read_excel("phl_exoplanet_catalog_RENAMED.xlsx"),stringsAsFactors = FALSE)
Planet_not_habitable_l<-subset(phl_exoplanet_catalog_RENAMED,P_H==0)
Planet_habitable<-subset(phl_exoplanet_catalog_RENAMED,P_H==1)
Planet_dataset_no_habit_sample<- sample(3657,445)
phl_exoplanet_not_habitable<-Planet_not_habitable_l[Planet_dataset_no_habit_sample,]
Planets_dataset<-rbind(Planet_habitable,phl_exoplanet_not_habitable)
#save(Planets_dataset,file="Planets_dataset.rda")
#load("Planets_dataset.rda")
Planets_dataset[,12]<-as.factor(Planets_dataset[,12])
Planets_dataset[,15]<-as.factor(Planets_dataset[,15])
set.seed(0)
#########Splitting training vs test set
Planets_dataset_train<- sample(500,350)
levels(Planets_dataset$P_H) <- c("False","True")
Planets_dataset_test<-Planets_dataset[-Planets_dataset_train,]
View(Planets_dataset)
RF_perf_out<-tuneRF(Planets_dataset[Planets_dataset_train,-c(12,1)],Planets_dataset[Planets_dataset_train,12], ntree=5000)
RF_perf_out<-data.frame(RF_perf_out)
ggplot(RF_perf_out,aes(x=mtry, y=OOBError))+geom_line(color="red",linetype="dashed")+geom_point(color="red")+theme_bw()
rfor.planet <-randomForest(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M+S_S_T,data=Planets_dataset, subset=Planets_dataset_train,localImp = TRUE,importance=TRUE,proximity=TRUE,ntry=4)
rfor.predict<-data.frame(predict(rfor.planet, Planets_dataset_test, type = "class"))
source('~/GitHub/Exoplanets_Supervised_Learning/Manuscript/Script.R', echo=TRUE)
source('~/GitHub/Exoplanets_Supervised_Learning/Manuscript/Script.R', echo=TRUE)
qda.planet<- qda(P_H~P_P+S_T+P_D+P_PN+P_A+P_D_E+P_F+P_T_E+S_R_E+S_L+P_R+P_M, data=Planets_dataset, subset=Planets_dataset_train)
plot(qda.planet,dimen = 1, type = "b")
partimat(P_H ~ S_L+P_T_E, data=Planets_dataset[Planets_dataset_train,], method="qda")
qda.prob<-data.frame(predict(qda.planet,Planets_dataset[-Planets_dataset_train,],type = "response"))
qda.prob<-qda.prob["class"]
qda_fin<-data.frame(qda.prob,stringsAsFactors = TRUE)
qda_fin["Test"]<-as.factor(Planets_dataset[-Planets_dataset_train,12])
colnames(qda_fin)<-c("Predict","Test")
caret::confusionMatrix(table(qda_fin))
fourfoldplot(table(qda_fin), color = c("red","darkgreen"),conf.level = 0, margin = 1, main = "QDA")
source('~/GitHub/Exoplanets_Supervised_Learning/Manuscript/Script.R', echo=TRUE)
